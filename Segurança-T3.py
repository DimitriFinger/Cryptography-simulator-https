import random
from Crypto.Hash import SHA256

p_hexadecimal = "B10B8F96A080E01DDE92DE5EAE5D54EC52C99FBCFB06A3C69A6A9DCA52D23B616073E28675A23D189838EF1E2EE652C013ECB4AEA906112324975C3CD49B83BFACCBDD7D90C4BD7098488E9C219A73724EFFD6FAE5644738FAA31A4FF55BCCC0A151AF5F0DC8B4BD45BF37DF365C1A65E68CFDA76D4DA708DF1FB2BC2E4A4371"
g_hexadecimal = "A4D1CBD5C3FD34126765A442EFB99905F8104DD258AC507FD6406CFF14266D31266FEA1E5C41564B777E690F5504F213160217B4B01B886A5E91547F9E2749F4D7FBD7D3B9A92EE1909D0D2263F80A76A6A24C087A091F531DBF0A0169B6A28AD662A4D18E73AFA32D779D5918D08BC8858F4DCEF97C2A24855E6EEB22B3B2E5"

p_decimal = int(p_hexadecimal,16)
g_decimal = int(g_hexadecimal,16)

def generate_random_a_value(p_decimal):
    # a = random.randint(0,p_decimal)
    # first number generated by function above is mocked below
    return 123705312412318916704247743587675603001627154551172868392175465183200784471918996863253192551547811473668156778008783691613079446343592061823441420292256291907063602243168905562636317108716473779802217627667873328989749104444477128445677107334922735974961431126411924656090058162704483844784149775442141726090

def calculate_A(a, p, g):
    A_decimal = pow(g,a,p)
    print("\nA decimal: " + str(A_decimal))
    A_hexadecimal = hex(A_decimal)    
    return A_hexadecimal[2::].upper()

def calculate_V(B,a,p):
    B_decimal = int(B,16)
    print("\n B decimal:  " + str(B_decimal))
    return pow (B_decimal,a,p)

def get_SHA256_128_bits(V):
    h = SHA256.new()
    h.update(V)
    hash = h.digest()



if __name__ == "__main__":

    a = generate_random_a_value(p_decimal)
    # a = 123705312412318916704247743587675603001627154551172868392175465183200784471918996863253192551547811473668156778008783691613079446343592061823441420292256291907063602243168905562636317108716473779802217627667873328989749104444477128445677107334922735974961431126411924656090058162704483844784149775442141726090
    
    A_hexadecimal = calculate_A(a,p_decimal,g_decimal)
    # A_hexadeximal value sended to teacher
    # A_hexadecimal = AC4A952F24FEA263270ADD001C45265E189F2F4E19F13FDECD9
    #                 53019242A10F3E0FEC19BAD7244CA2EF3A73B03AC51B0B7ED36D5
    #                 17974BEAFD065C2FE6CA36573D40F50434DCBACDCC3FED0BDD60A
    #                 131C4744721BF6B8118F1F8FAAB0D6CC6030401EAF264356C465F
    #                 15625A41D46449C08D1CE81A0116EAB9E402142F6790F9
    print("\nA hexadecimal: " + A_hexadecimal)

    #B_hexadecimal value given by teacher
    #B_hexadecimal = ""

    #V = calculate_v(B_hexadecimal, a, p_decimal)
    #print(V)
    #
    #